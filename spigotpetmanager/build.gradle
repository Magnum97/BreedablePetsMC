import org.apache.tools.ant.filters.ReplaceTokens

// We use this to replace version in plugin.yml

plugins {
    id 'java'
    id 'maven-publish'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }

    maven {
        url = 'https://jitpack.io'
    }

    maven {
        url = 'https://repo.aikar.co/content/groups/aikar/'
    }

    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }
}
compileJava {
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = 'javac'
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.14.2-R0.1-SNAPSHOT"
    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
    compile 'com.github.kangarko:UIDesigner:1.1.6'

    compile "co.aikar:acf-bukkit:0.5.0-SNAPSHOT"
    implementation 'me.magnum.lib:CommonLibrary:1.0.3-SNAPSHOT'
    implementation 'com.github.kangarko:Remain:3.2.0'

}

group = 'me.magnum.petmanager'
version = '1.0.0-SNAPSHOT'
archivesBaseName = 'PetManager'
mainClassName = 'me.magnum.petmanager.PetManager'
targetCompatibility = 1.8
sourceCompatibility = 1.8

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
/* This will replace '@VERSION@' in the plugin.yml with the version declared above, just put '@VERSION@' for the version in the plugin.yml */

processResources {
    filter ReplaceTokens, tokens: [
            "VERSION": version,
            "NAME"   : archivesBaseName,
            "MAIN"   : mainClassName,
    ]
}
shadowJar {
    relocate 'co.aikar.commands', 'me.magnum.breedablepets.acf'
}

build.dependsOn shadowJar
